apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'jacoco'

android {
    compileSdkVersion rulebot.compile
    buildToolsVersion rulebot.buildTools

    defaultConfig {
        applicationId "com.kyledahlin.myrulebot"
        minSdkVersion rulebot.minSdk
        targetSdkVersion rulebot.targetSdk
        versionCode rulebot.versionCode
        versionName rulebot.versionName

        testInstrumentationRunner rulebot.testRunner

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        def url = System.getenv('RULEBOT_URL')
        release {
            buildConfigField("String", "RULEBOT_URL", "\"$url\"")
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            testCoverageEnabled false
        }
        debug {
            buildConfigField("String", "RULEBOT_URL", "\"$url\"")
            minifyEnabled false
            shrinkResources false
            testCoverageEnabled true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    kotlinOptions { jvmTarget = "1.8" }

    dynamicFeatures = [":reactions"]

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    sourceSets {
        test.assets.srcDirs += files("$projectDir/schemas".toString())
    }
}

dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$libs.kotlin"
    api 'androidx.appcompat:appcompat:1.1.0'
    api 'androidx.core:core-ktx:1.2.0'
    api 'androidx.constraintlayout:constraintlayout:1.1.3'
    api 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'
    api 'com.google.android.play:core:1.7.2'
    api 'androidx.recyclerview:recyclerview:1.1.0'
    api 'com.jakewharton.timber:timber:4.7.1'

    //architecture
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$libs.lifecycle"
    api "androidx.lifecycle:lifecycle-livedata-ktx:$libs.lifecycle"
    api "androidx.navigation:navigation-fragment-ktx:$libs.navigation"
    api "androidx.navigation:navigation-ui-ktx:$libs.navigation"

    //persistnce
    def room_version = "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    //DI
    api "com.google.dagger:dagger:$libs.dagger"
    kapt "com.google.dagger:dagger-compiler:$libs.dagger"

    //networking
    api 'com.squareup.retrofit2:retrofit:2.7.2'
    api("com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.5.0")
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:4.3'
    testImplementation 'androidx.test:core:1.2.0'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
}
